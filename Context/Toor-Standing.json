{
  "openapi": "3.0.0",
  "tags": [
    {
      "name": "organizer"
    },
    {
      "name": "standing"
    },
    {
      "name": "organizer_standings"
    },
    {
      "name": "tournament_api"
    }
  ],
  "info": {
    "title": "Final Standings",
    "termsOfService": "https:\/\/developer.toornament.com\/terms-guidelines",
    "version": "2.3.0",
    "description": "The Toornament platform connects your website and application with the eSports tournaments around the world.",
    "contact": {
      "name": "Toornament Developer",
      "url": "https:\/\/developer.toornament.com",
      "email": "contact@toornament.com"
    }
  },
  "servers": [
    {
      "url": "https:\/\/api.toornament.com\/organizer\/v2"
    }
  ],
  "paths": {
    "\/standing-items": {
      "get": {
        "tags": [
          "organizer_standings"
        ],
        "summary": "Retrieve a list of final standing items.",
        "description": "Returns a list of final standing items.",
        "parameters": [
          {
            "$ref": "#\/components\/parameters\/standingItemRange"
          },
          {
            "$ref": "#\/components\/parameters\/tournamentIds"
          },
          {
            "$ref": "#\/components\/parameters\/userIds"
          },
          {
            "$ref": "#\/components\/parameters\/teamIds"
          },
          {
            "$ref": "#\/components\/parameters\/customUserIdentifiers"
          },
          {
            "$ref": "#\/components\/parameters\/participantIds"
          },
          {
            "$ref": "#\/components\/parameters\/minRank"
          },
          {
            "$ref": "#\/components\/parameters\/maxRank"
          }
        ],
        "responses": {
          "206": {
            "description": "Standing items retrieved.",
            "content": {
              "application\/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#\/components\/schemas\/StandingItem"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "oAuth2": [
              "organizer:result"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "organizer_standings"
        ],
        "summary": "Creates a new standing item.",
        "description": "Creates a new standing item. The position is recalculated according to the rank.",
        "requestBody": {
          "description": "Standing item data.",
          "content": {
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/StandingItemCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/StandingItem"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "oAuth2": [
              "organizer:result"
            ]
          }
        ]
      }
    },
    "\/standing-items\/{id}": {
      "get": {
        "tags": [
          "organizer_standings"
        ],
        "summary": "Retrieve a single standing item.",
        "description": "Retrieve a single standing item.",
        "parameters": [
          {
            "$ref": "#\/components\/parameters\/itemId"
          }
        ],
        "responses": {
          "200": {
            "description": "Standing item retrieved.",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/StandingItem"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "oAuth2": [
              "organizer:result"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "organizer_standings"
        ],
        "summary": "Update a standing item.",
        "description": "Updates the standing item with the given id. The position is recalculated according to the rank.",
        "parameters": [
          {
            "$ref": "#\/components\/parameters\/itemId"
          }
        ],
        "requestBody": {
          "description": "Standing item data.",
          "content": {
            "application\/json": {
              "schema": {
                "$ref": "#\/components\/schemas\/StandingItemUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Standing item update.",
            "content": {
              "application\/json": {
                "schema": {
                  "$ref": "#\/components\/schemas\/StandingItem"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "oAuth2": [
              "organizer:result"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "organizer_standings"
        ],
        "summary": "Deletes a standing item.",
        "description": "Deletes a standing item identified by the given id.",
        "parameters": [
          {
            "$ref": "#\/components\/parameters\/itemId"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        },
        "security": [
          {
            "apiKey": [],
            "oAuth2": [
              "organizer:result"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "name": "X-Api-Key",
        "in": "header"
      },
      "oAuth2": {
        "type": "oauth2",
        "description": "Access token with \u0027organizer:result\u0027 scope (see (Authorization)[https:\/\/developer.toornament.com\/v2\/security\/authorization])",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https:\/\/api.toornament.com\/oauth\/v2\/token",
            "scopes": {
              "organizer:result": "Grants the ability to edit match information and referee results.."
            }
          },
          "authorizationCode": {
            "authorizationUrl": "https:\/\/account.toornament.com\/oauth2\/authorize",
            "tokenUrl": "https:\/\/api.toornament.com\/oauth\/v2\/token",
            "scopes": {
              "organizer:result": "Grants the ability to edit match information and referee results."
            }
          }
        }
      }
    },
    "parameters": {
      "itemId": {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The id of the standing item to retrieve."
      },
      "standingItemRange": {
        "name": "Range",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string",
          "example": "items=0-49"
        },
        "description": "A range of requested items using the \u0027items\u0027 unit. The size of the range can not exceed 50. (see [Pagination](https:\/\/developer.toornament.com\/v2\/overview\/pagination))"
      },
      "tournamentIds": {
        "name": "tournament_ids",
        "in": "query",
        "required": false,
        "explode": false,
        "style": "form",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": "378426939508809728,534138941862841533"
        },
        "description": "Only return items for the given list of ids."
      },
      "userIds": {
        "name": "user_ids",
        "in": "query",
        "required": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": "475141143408399456,735147043408391234"
        },
        "description": "One or several player user ids involved in the standings to filter."
      },
      "teamIds": {
        "name": "team_ids",
        "in": "query",
        "required": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": "561714159547269773,255149043401714321"
        },
        "description": "One or several team ids involved in the standings to filter."
      },
      "customUserIdentifiers": {
        "name": "custom_user_identifiers",
        "in": "query",
        "required": false,
        "explode": false,
        "style": "form",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": "acme:account:1234,acme:account:1235"
        },
        "description": "A list of external custom user identifiers."
      },
      "participantIds": {
        "name": "participant_ids",
        "in": "query",
        "required": false,
        "explode": false,
        "style": "form",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": "618965416546776434,618975467354349191"
        },
        "description": "One or several participant ids involved in the standings to filter."
      },
      "minRank": {
        "name": "min_rank",
        "in": "query",
        "schema": {
          "type": "integer"
        },
        "description": "A minimal rank to filter."
      },
      "maxRank": {
        "name": "max_rank",
        "in": "query",
        "schema": {
          "type": "integer"
        },
        "description": "A maximal rank to filter."
      }
    },
    "schemas": {
      "StandingItemBase": {
        "properties": {
          "rank": {
            "description": "The ranking of the participant in the standing. Multiple participants can share the same rank if they are tied after involving all configured tiebreakers.",
            "type": "integer",
            "example": 3
          },
          "position": {
            "description": "A position used for presentation purposes. It is always unique within the same standing.",
            "type": "integer",
            "example": 4
          }
        }
      },
      "StandingItemTournament": {
        "properties": {
          "tournament_id": {
            "description": "The id of the tournament.",
            "type": "string",
            "example": "378426939508809728"
          }
        }
      },
      "StandingItemUpdate": {
        "allOf": [
          {
            "$ref": "#\/components\/schemas\/StandingItemBase"
          },
          {
            "type": "object",
            "properties": {
              "participant_id": {
                "description": "The id of the participant.",
                "type": "string",
                "nullable": true,
                "example": "375143143408309123"
              }
            }
          }
        ]
      },
      "StandingItemCreate": {
        "allOf": [
          {
            "$ref": "#\/components\/schemas\/StandingItemUpdate"
          },
          {
            "$ref": "#\/components\/schemas\/StandingItemTournament"
          },
          {
            "type": "object",
            "required": [
              "tournament_id",
              "participant_id",
              "rank"
            ]
          }
        ]
      },
      "StandingItem": {
        "allOf": [
          {
            "$ref": "#\/components\/schemas\/StandingItemBase"
          },
          {
            "$ref": "#\/components\/schemas\/StandingItemTournament"
          },
          {
            "type": "object",
            "required": [
              "id",
              "tournament_id",
              "participant",
              "rank",
              "position"
            ],
            "properties": {
              "id": {
                "description": "A unique identifier for the standing item.",
                "type": "string",
                "example": "378426939508809728"
              },
              "participant": {
                "allOf": [
                  {
                    "$ref": "#\/components\/schemas\/Participant"
                  },
                  {
                    "type": "object",
                    "description": "The participant identified with this standing item.",
                    "nullable": true
                  }
                ]
              }
            }
          }
        ]
      },
      "Participant": {
        "type": "object",
        "required": [
          "id",
          "name",
          "custom_user_identifier",
          "custom_fields"
        ],
        "properties": {
          "id": {
            "description": "The id of the participant.",
            "type": "string",
            "example": "375143143408309123"
          },
          "name": {
            "description": "The name of the participant.",
            "type": "string",
            "maxLength": 40,
            "example": "Jon Snow"
          },
          "custom_user_identifier": {
            "description": "An external custom user identifier. Use the format that suits your needs.",
            "type": "string",
            "maxLength": 100,
            "nullable": true,
            "example": "acme:account:1234"
          },
          "custom_fields": {
            "description": "The values of the custom fields configured in the tournament using the machine names as keys. For more information, please read the [Custom Fields](https:\/\/developer.toornament.com\/v2\/core-concepts\/custom-fields) documentation.",
            "type": "object"
          }
        }
      }
    }
  }
}